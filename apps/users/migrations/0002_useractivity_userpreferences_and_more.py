# Generated by Django 5.0 on 2025-06-09 13:26

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('view_service', 'Viewed Service'), ('bookmark_service', 'Bookmarked Service'), ('remove_bookmark', 'Removed Bookmark'), ('write_review', 'Wrote Review'), ('write_comment', 'Wrote Comment'), ('search', 'Performed Search'), ('emergency_search', 'Emergency Search'), ('profile_update', 'Updated Profile'), ('login', 'Logged In'), ('logout', 'Logged Out')], help_text='Type of activity performed', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional activity metadata')),
                ('session_id', models.CharField(blank=True, help_text='Session identifier', max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string')),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='light', help_text='UI theme preference', max_length=10)),
                ('language', models.CharField(choices=[('en', 'English'), ('es', 'Spanish'), ('fr', 'French'), ('zh', 'Chinese')], default='en', help_text='Preferred language', max_length=5)),
                ('default_map_zoom', models.PositiveIntegerField(default=12, help_text='Default map zoom level')),
                ('show_user_location', models.BooleanField(default=True, help_text='Show user location on map')),
                ('default_search_radius_km', models.PositiveIntegerField(default=10, help_text='Default search radius in kilometers')),
                ('preferred_categories', models.JSONField(blank=True, default=list, help_text='List of preferred service categories')),
                ('email_notifications', models.BooleanField(default=True, help_text='Receive email notifications')),
                ('sms_notifications', models.BooleanField(default=False, help_text='Receive SMS notifications')),
                ('emergency_alerts', models.BooleanField(default=True, help_text='Receive emergency service alerts')),
                ('service_updates', models.BooleanField(default=True, help_text='Receive updates about bookmarked services')),
                ('profile_public', models.BooleanField(default=False, help_text='Make profile visible to other users')),
                ('reviews_anonymous', models.BooleanField(default=False, help_text='Post reviews anonymously by default')),
                ('location_sharing', models.BooleanField(default=True, help_text='Allow location-based recommendations')),
            ],
            options={
                'verbose_name': 'User Preferences',
                'verbose_name_plural': 'User Preferences',
            },
        ),
        migrations.AlterModelOptions(
            name='servicebookmark',
            options={'ordering': ['-created_at'], 'verbose_name': 'Service Bookmark', 'verbose_name_plural': 'Service Bookmarks'},
        ),
        migrations.RemoveIndex(
            model_name='searchhistory',
            name='users_searc_query_fad031_idx',
        ),
        migrations.RenameIndex(
            model_name='searchhistory',
            new_name='users_searc_user_id_0adb08_idx',
            old_name='users_searc_user_id_3eef2b_idx',
        ),
        migrations.RenameIndex(
            model_name='searchhistory',
            new_name='users_searc_session_e9c417_idx',
            old_name='users_searc_session_7678c2_idx',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='clicked_service_id',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='search_location_lat',
        ),
        migrations.RemoveField(
            model_name='searchhistory',
            name='search_location_lng',
        ),
        migrations.RemoveField(
            model_name='servicebookmark',
            name='is_favorite',
        ),
        migrations.RemoveField(
            model_name='servicebookmark',
            name='priority',
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='referrer',
            field=models.URLField(blank=True, help_text='Page that referred to search'),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='search_location',
            field=models.CharField(blank=True, help_text='Search location (stored as string for now)', max_length=200),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='user_agent',
            field=models.TextField(blank=True, help_text='User agent string'),
        ),
        migrations.AddField(
            model_name='servicebookmark',
            name='access_count',
            field=models.PositiveIntegerField(default=1, help_text='Number of times bookmark was accessed'),
        ),
        migrations.AddField(
            model_name='servicebookmark',
            name='folder_name',
            field=models.CharField(blank=True, help_text='Optional folder name for organizing bookmarks', max_length=100),
        ),
        migrations.AddField(
            model_name='servicebookmark',
            name='last_accessed',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='When bookmark was last accessed'),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='category_filter',
            field=models.CharField(blank=True, help_text='Category filter applied', max_length=100),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, help_text='IP address of the search request', null=True),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='query',
            field=models.CharField(blank=True, help_text='Search query text', max_length=500),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='results_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of results returned'),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='search_radius_km',
            field=models.FloatField(blank=True, help_text='Search radius in kilometers', null=True),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='session_id',
            field=models.CharField(blank=True, help_text='Session identifier for anonymous users', max_length=100),
        ),
        migrations.AlterField(
            model_name='searchhistory',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User who performed the search (null for anonymous)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='search_history', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='servicebookmark',
            name='notes',
            field=models.TextField(blank=True, help_text='Personal notes about this service'),
        ),
        migrations.AlterField(
            model_name='servicebookmark',
            name='service',
            field=models.ForeignKey(help_text='Bookmarked service', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_by', to='services.service'),
        ),
        migrations.AlterField(
            model_name='servicebookmark',
            name='user',
            field=models.ForeignKey(help_text='User who bookmarked the service', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='searchhistory',
            index=models.Index(fields=['query', '-created_at'], name='users_searc_query_3f91f0_idx'),
        ),
        migrations.AddIndex(
            model_name='servicebookmark',
            index=models.Index(fields=['user', '-created_at'], name='users_servi_user_id_35d27f_idx'),
        ),
        migrations.AddIndex(
            model_name='servicebookmark',
            index=models.Index(fields=['user', 'folder_name'], name='users_servi_user_id_da46ef_idx'),
        ),
        migrations.AlterModelTable(
            name='searchhistory',
            table=None,
        ),
        migrations.AlterModelTable(
            name='servicebookmark',
            table=None,
        ),
        migrations.AddField(
            model_name='useractivity',
            name='service',
            field=models.ForeignKey(blank=True, help_text='Service related to this activity', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='services.service'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='user',
            field=models.ForeignKey(help_text='User who performed the activity', on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='user',
            field=models.OneToOneField(help_text='User these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', '-created_at'], name='users_usera_user_id_250303_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['activity_type', '-created_at'], name='users_usera_activit_257cae_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['service', '-created_at'], name='users_usera_service_b15fd8_idx'),
        ),
    ]
